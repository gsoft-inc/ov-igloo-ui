[
  [
    {
      "tags": {},
      "filePath": "/Users/franck.gaudin/Devel/Igloo/components/packages/Toggle/src/Toggle.tsx",
      "description": "",
      "displayName": "Toggle",
      "methods": [],
      "props": {
        "children": {
          "defaultValue": null,
          "description": "The content to display inside the label",
          "name": "children",
          "parent": {
            "fileName": "components/packages/Toggle/src/Toggle.tsx",
            "name": "ToggleProps"
          },
          "declarations": [
            {
              "fileName": "components/packages/Toggle/src/Toggle.tsx",
              "name": "ToggleProps"
            },
            {
              "fileName": "components/node_modules/@types/react/index.d.ts",
              "name": "TypeLiteral"
            }
          ],
          "required": false,
          "type": { "name": "ReactNode" }
        },
        "className": {
          "defaultValue": null,
          "description": "Add a specific class to the toggle",
          "name": "className",
          "parent": {
            "fileName": "components/packages/Toggle/src/Toggle.tsx",
            "name": "ToggleProps"
          },
          "declarations": [
            {
              "fileName": "components/packages/Toggle/src/Toggle.tsx",
              "name": "ToggleProps"
            }
          ],
          "required": false,
          "type": { "name": "string" }
        },
        "dataTest": {
          "defaultValue": null,
          "description": "Add a data-test tag for automated tests",
          "name": "dataTest",
          "parent": {
            "fileName": "components/packages/Toggle/src/Toggle.tsx",
            "name": "ToggleProps"
          },
          "declarations": [
            {
              "fileName": "components/packages/Toggle/src/Toggle.tsx",
              "name": "ToggleProps"
            }
          ],
          "required": false,
          "type": { "name": "string" }
        },
        "htmlFor": {
          "defaultValue": null,
          "description": "Indicates the ID of the element that is controlled by the toggle",
          "name": "htmlFor",
          "parent": {
            "fileName": "components/packages/Toggle/src/Toggle.tsx",
            "name": "ToggleProps"
          },
          "declarations": [
            {
              "fileName": "components/packages/Toggle/src/Toggle.tsx",
              "name": "ToggleProps"
            }
          ],
          "required": true,
          "type": { "name": "string" }
        },
        "checked": {
          "defaultValue": null,
          "description": "Modifies true/false value of the toggle",
          "name": "checked",
          "parent": {
            "fileName": "components/packages/Toggle/src/Toggle.tsx",
            "name": "ToggleProps"
          },
          "declarations": [
            {
              "fileName": "components/packages/Toggle/src/Toggle.tsx",
              "name": "ToggleProps"
            }
          ],
          "required": false,
          "type": { "name": "boolean" }
        },
        "helperText": {
          "defaultValue": null,
          "description": "The content to display to help users",
          "name": "helperText",
          "parent": {
            "fileName": "components/packages/Toggle/src/Toggle.tsx",
            "name": "ToggleProps"
          },
          "declarations": [
            {
              "fileName": "components/packages/Toggle/src/Toggle.tsx",
              "name": "ToggleProps"
            }
          ],
          "required": false,
          "type": { "name": "string" }
        },
        "onChange": {
          "defaultValue": null,
          "description": "Function called when the value changes",
          "name": "onChange",
          "parent": {
            "fileName": "components/packages/Toggle/src/Toggle.tsx",
            "name": "ToggleProps"
          },
          "declarations": [
            {
              "fileName": "components/packages/Toggle/src/Toggle.tsx",
              "name": "ToggleProps"
            }
          ],
          "required": false,
          "type": { "name": "(e: ChangeEvent<HTMLInputElement>) => void" }
        }
      }
    }
  ]
]
