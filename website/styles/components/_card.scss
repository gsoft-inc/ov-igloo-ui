@use 'sass:color';
@use '../base/media-query' as media;
@use '../tokens' as token;

$card-effect-size: #{token.$space-2};
$card-effect-size-negative: calc(-1* #{token.$space-2} );

$card-shadow-yellow: rgb(
  color.red(token.$yellow),
  color.green(token.$yellow),
  color.blue(token.$yellow),
  var(--alpha, 0)
);

$card-shadow-green: rgb(
  color.red(token.$green),
  color.green(token.$green),
  color.blue(token.$green),
  var(--alpha, 0)
);

$card-shadow-pink: rgb(
  color.red(token.$pink),
  color.green(token.$pink),
  color.blue(token.$pink),
  var(--alpha, 0)
);

// interactive card
a {
  .io-card {
    transition: box-shadow 150ms ease-in-out, transform 200ms ease-in-out,
    -webkit-transform 150ms ease-in-out;
    box-shadow: 0 0 0 0 $card-shadow-yellow;
    height: 100%;

    &::after {
      position: absolute;
      right: 0;
      bottom: 0;
      display: block;
      content: '';
      width: 100%;
      height: 100%;
      background: transparent;
      z-index: -1;
    }

    &:hover {
      --alpha: 1;

      transform: translate($card-effect-size-negative, $card-effect-size-negative);
      box-shadow: $card-effect-size $card-effect-size 0 0 $card-shadow-yellow;

      &::after {
        right: $card-effect-size-negative;
        bottom: $card-effect-size-negative;
      }
    }

    .io-card--components {
      box-shadow: 0 0 0 0 $card-shadow-yellow;

      &:hover {
        box-shadow: $card-effect-size $card-effect-size 0 0 $card-shadow-yellow;
      }
    }

    &.io-card--tokens {
      box-shadow: 0 0 0 0 $card-shadow-green;

      &:hover {
        box-shadow: $card-effect-size $card-effect-size 0 0 $card-shadow-green;
      }
    }

    &.io-card--icons {
      box-shadow: 0 0 0 0 $card-shadow-pink;

      &:hover {
        box-shadow: $card-effect-size $card-effect-size 0 0 $card-shadow-pink;
      }
    }
  }

  .io-card--components,
  .io-card--tokens,
  .io-card--icons {
    display: flex;
    vertical-align: center;
    gap: token.$space-3;

    @include media.mq(medium) {
      flex-direction: column;
    }
  }

  .io-card--inline {
    box-shadow: none;
    height: auto;

    &:hover {
      transform: none;
      box-shadow: none;
    }
  }
}

.io-card {
  position: relative;
  font-size: var(--fs-400);
  border-radius: token.$radius-1;
  padding: token.$space-2;
  color: token.$white;
  background: token.$black;

  @include media.mq(medium) {
    padding: token.$space-3;
  }

  &__img {
    max-width: token.$space-8;
  }

  &__content {
    line-height: 1.5;
    z-index: 100;
  }

  &__title.io-title {
    color: inherit;
    margin-bottom: 0;
  }

  &__description {
    margin: token.$space-0 0 0;
  }
}

.io-card--inline {
  display: flex;
  padding: 0;
  color: token.$black;
  background: token.$white;

  .io-card__title {
    font-size: var(--fs-300);
    margin-bottom: 0;
  }

  .io-card__description {
    font-size: var(--fs-100);
  }

  .io-card__content {
    padding: 0 token.$space-2;
  }
}
