name: Publish Packages

on:
  push:
    branches: [main]

jobs:
  install-cache:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 16 ]
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Cache yarn dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.ox }}-yarn-
      - name: Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          yarn install --force --non-interactive

  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 16 ]
    needs: install-cache
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Restore yarn dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.ox }}-yarn-
      - name: Run Eslint
        run: yarn lint
      - name: Run Stylelint
        run: yarn lint:style

  test_and_build:
    name: Test and build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 16 ]
    needs: install-cache
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Restore yarn dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.ox }}-yarn-
      - name: Run build
        run: yarn build
      - name: Run tests
        run: yarn test

  release:
    name: Release
    needs: [test_and_build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 16 ]

    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Restore yarn dependencies
        uses: actions/cache@v3
        id: cache-dependencies
      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}

  publish-npm:
    name: Publish to npm
    needs: [test_and_build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 16 ]

    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Restore yarn dependencies
        uses: actions/cache@v3
        id: cache-dependencies
      - run: yarn publish-ci
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
