name: CI

on:
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  install-cache:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16]
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Cache yarn dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.ox }}-yarn-
      - name: Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          yarn install --force --non-interactive

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 16 ]
    needs: install-cache
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Restore yarn dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.ox }}-yarn-
      - name: Run Eslint
        run: yarn lint
      - name: Run Stylelint
        run: yarn lint:style

  build_and_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 16 ]
    needs: install-cache
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Restore yarn dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.ox }}-yarn-
      - name: Run build
        run: yarn build
      - name: Run tests
        run: yarn test

  slack-notification:
    runs-on: ubuntu-latest
    needs: [build_and_test, lint]
    steps:
      - name: Send message to Slack
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "${{ github.actor }} created <${{ github.event.pull_request.html_url || github.event.head_commit.url }}|pull request #${{github.event.pull_request.number}}> in <${{ github.repositoryUrl }}|Igloo>\n>*<${{ github.event.pull_request.html_url || github.event.head_commit.url }}|#${{github.event.pull_request.number}} ${{github.event.pull_request.title}}>*\n\n${{ github.event.description }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK